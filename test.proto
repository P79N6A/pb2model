syntax = "proto3";
package TiMatrix.ai_studio;
option go_package = "pb3/TiMatrix/ai_studio";
import "google/api/annotations.proto";

message RegisterWorkerReq {
    string url = 1 [json_name = "Url"]; //appid
    string ip = 2 [json_name = "Ip"]; 
    int64 port = 3 [json_name = "Port"]; 
    string worker_name = 4 [json_name = "WorkerName"]; 
}

message RegisterWorkerRsp {
    //错误不需在返回包中定义,通过grpc的error直接返回
    string worker_name = 1 [json_name = "WorkerName"];
}

message RegisterUserServiceReq{
    string service_name = 1 [json_name = "ServiceName"];
    string service_code = 2 [json_name = "ServiceCode"];
    string uin = 3 [json_name = "Uin"];
}

message RegisterUserServiceRsp{
    string service_name = 1 [json_name = "ServiceName"];
}

service ServerLessMaster {
    rpc RegisterWorker (RegisterWorkerReq) returns (RegisterWorkerRsp) {
        option (google.api.http) = { 
                post:"/RegisterWorker"
                body:"*"
            };
    }

    rpc RegisterUserService (RegisterUserServiceReq) returns (RegisterUserServiceRsp) {
        option (google.api.http) = { 
                post:"/RegisterUserService"
                body:"*"
            };
    }
}
